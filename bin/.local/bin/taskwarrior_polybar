#!/bin/bash
# Script is ran periodically by polybar
# TODO: Inverse the condiction positive first on if else block

if [[ -f ~/.tw_started_id ]]; then

  if [[ -z "$(cat ~/.tw_started_id)" ]]; then
    # there is no started taskin ~/.tw_started_id

    started_task_count=$(task +ACTIVE count)

    # make sure there is actually no started task in case ~/.tw_started_id is deleted / just newly created
    if ((started_task_count > 0)); then
      started_task_uuid=$(task _get $(task +ACTIVE limit:1 | awk 'NR==4{print $1}').uuid)
      printf "$started_task_uuid" >~/.tw_started_id
    fi

    # check if there is pending task left
    pending_task_count=$(task status:pending count)

    if ((pending_task_count == 0)); then
      printf "There is pending task."
    else
      next_urgent_task_uuid=$(task _get $(task limit:1 | awk 'NR==4{print $1}').uuid)
      next_urgent_task_description=$(task _get "$next_urgent_task_uuid".description)
      printf "Next task: "$next_urgent_task_description""
    fi

  else

    task_uuid=$(cat ~/.tw_started_id)
    task_project=$(task _get "$task_uuid".project)
    task_description=$(task _get "$task_uuid".description)

    report="Current task: $task_description - $(timew summary :day "$task_project" "$task_description" | awk '{print $NF}' | tail -2 | head -1)"

    if timew >/dev/null 2>&1; then
      printf "$report"
    else
      printf ""
    fi

  fi

else
  touch ~/.tw_started_id
fi
